#!/usr/bin/env bash

PROJECT_ROOT=$(git rev-parse --show-toplevel)
export PROJECT_ROOT

action=${1:-"create"}

case $action in
  create) 
    minikube start \
      --cpus='4' \
      --kubernetes-version='stable' \
      --memory='8G' \
      --nodes=2

    CLUSTER_IP=$(minikube ip)
    export CLUSTER_IP

    # Create TLS Certificate Authority Certificat
    # Generate a private key for the CA: 
    openssl genrsa 2048 > ca-key.pem

    # Generate the X509 certificate for the CA: 
    openssl req -new -x509 -nodes -days 365000 -key ca-key.pem -out ca-cert.pem \
        -subj "/C=US/ST=Texas/L=Austin/O=OpsBots LLC. /OU=DevOps Department/CN=opsbots.org"

    # Create TLS secret which contains custom certificate and private key
    kubectl -n kube-system create secret tls mkcert --key ca-key.pem --cert ca-cert.pem

    ## Install metrics server
    make -C "${PROJECT_ROOT}/helm/metrics-server" deploy

    # ## Install Kubernetes Dashboard
    # make -C "${PROJECT_ROOT}/helm/kubernetes-dashboard" deploy
    # kubectl apply --filename="${PROJECT_ROOT}/helm/kubernetes-dashboard/ingress.yaml"
    # echo "$CLUSTER_IP kubernetes-dashboard.minikube.local"  | sudo tee -a /etc/hosts

    # ## Install certificate manager
    # make -C "${PROJECT_ROOT}/helm/cert-manager" deploy

    # ## Install Keycloak
    # kubectl create ns keycloak
    # kubectl apply --filename="${PROJECT_ROOT}/manifests/keycloak/keycloak.yaml"
    # kubectl apply --filename="${PROJECT_ROOT}/manifests/keycloak/ingress.yaml"
    # echo "$CLUSTER_IP keycloak.minikube.local"  | sudo tee -a /etc/hosts

    # ## install operator lifecycle manager
    # kubectl apply --filename="${PROJECT_ROOT}/manifests/operator-lifecycle-manager/v0.20.0/crds.yaml"
    # kubectl apply --filename="${PROJECT_ROOT}/manifests/operator-lifecycle-manager/v0.20.0/olm.yaml"

    # ## Register RedHat Community Operators Source repo
    # kubectl apply --filename="${PROJECT_ROOT}/manifests/open-data-hub/catalog-source.yaml"
    # kubectl apply --filename="${PROJECT_ROOT}/manifests/open-data-hub/odh-subscription.yaml"

    ## write dns mapping to hosts file
    ;;
  delete|destroy) 
    minikube delete
    ;;
  *)
    echo "unrecognied action"
    exit 0
    ;;
esac

# kubectl apply -n [namespace]-f <(echo '
# apiVersion: cert-manager.io/v1alpha2
# kind: Certificate
# metadata:
#   name: [certificate-name]
# spec:
#   secretName: [secret-name]
#   dnsNames:
#   - "*.[namespace].svc.cluster.local"
#   - "*.[namespace]"
#   issuerRef:
#     name: [issuer-name]
# ')