apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.io/limit-ranger:
      "LimitRanger plugin set: cpu request for container
      postgresql; cpu limit for container postgresql"
    sidecar.istio.io/inject: "true"
  creationTimestamp: "2022-07-17T20:05:11Z"
  generateName: jupyterhub-db-
  labels:
    app: jupyterhub
    component.opendatahub.io/name: jupyterhub
    controller-revision-hash: jupyterhub-db-8db68c9c5
    deploymentconfig: jupyterhub-db
    opendatahub.io/component: "true"
    statefulset.kubernetes.io/pod-name: jupyterhub-db-0
  name: jupyterhub-db-0
  namespace: ml-workshop
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: jupyterhub-db
      uid: 86fb0089-a67d-453c-a28b-164f777fe0f3
  resourceVersion: "7593"
  uid: 9d291f0f-cb6f-4ad6-bd6b-bf3bc3d2d1b0
spec:
  containers:
    - env:
        - name: POSTGRESQL_USER
          value: jupyterhub
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD
              name: jupyterhub
        - name: POSTGRESQL_DATABASE
          value: jupyterhub
      image: quay.io/ml-aml-workshop/postgresql-96
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 5432
        timeoutSeconds: 1
      name: postgresql
      ports:
        - containerPort: 5432
          protocol: TCP
      readinessProbe:
        exec:
          command:
            - /bin/sh
            - -i
            - -c
            - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT
              1'
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 1Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: data
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-xpvnt
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: jupyterhub-db-0
  nodeName: k8s-mlops
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000630000
  serviceAccount: default
  serviceAccountName: default
  subdomain: jupyterhub-db
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: data
      persistentVolumeClaim:
        claimName: jupyterhub-db
    - configMap:
        defaultMode: 420
        name: jupyterhub-cfg
      name: config
    - name: kube-api-access-xpvnt
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
